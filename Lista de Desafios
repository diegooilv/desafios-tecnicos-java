---------------------------
Desafios Simples (nível 1)
---------------------------

🔹 000. Olá, Mundo!

🔹 001. Verificador de Palíndromo
Dado uma String, verifique se é um palíndromo (igual quando lida de trás pra frente).
Ex: "ovo", "Ame a ema", "socorram-me subi no ônibus em Marrocos"

🔹 002. Soma de números únicos
Dado um array de inteiros, retorne a soma apenas dos números que aparecem uma única vez.
Exemplo:
Entrada: [2, 3, 4, 2, 4]
Saída: 3 (somente o número 3 aparece uma vez)

🔹 003. Orientação a Objetos: Zoológico
Crie as classes necessárias para representar o seguinte cenário:
Existe uma classe abstrata Animal com os atributos: nomeCientifico (String) e som (String).
Dois animais herdam de Animal: Leao e Macaco.
Todos os animais devem ter um método emitirSom() que imprime o som do animal.
Os animais devem ser armazenados em uma lista.
Você deve permitir:
Adicionar um novo animal.
Listar todos os animais emitindo seus sons.

🔹 004. Contador de Vogais
Escreva um método que conte quantas vogais (a, e, i, o, u) existem em uma String.
Ex: Entrada: "banana" → Saída: 3

🔹 005. Fatorial
Implemente uma função que calcule o fatorial de um número n.
Ex: 5! = 5×4×3×2×1 = 120
→ Pratique recursão também, se quiser um passo a mais.

🔹 006. Números Primos
Dado um número n, verifique se ele é primo.

🔹 007. Inverter String
Dado uma string, inverta seus caracteres.
Ex: "Java" → "avaJ"
(Dica: use StringBuilder ou laços)

-------------------------------------------------
🧠 Desafios de Lógica Intermediária (nível 2)
-------------------------------------------------
🔹 008. Soma dos Dígitos
Dado um número inteiro positivo, calcule a soma dos seus dígitos.
Ex: 123 → 1+2+3 = 6

🔹 009. Fibonacci até N termos
Imprima a sequência de Fibonacci até n termos.
Ex: 0, 1, 1, 2, 3, 5, 8...

🔹 010. Remover Duplicados de um Array
Dado um array de inteiros, retorne um novo array sem elementos duplicados.
→ Pratique com Set, List, Map.

🔹 011. Maior e menor número de uma lista
Dado um array de inteiros, retorne o menor e maior número. Como bônus, informe a média, pares e ímpares.
Ex: [3, 9, -1, 5] → menor: -1, maior: 9

🔹 012. Contar Frequência de Caracteres
Escreva um método que conte quantas vezes cada caractere aparece em uma string.
Ex: "banana" → {b=1, a=3, n=2}

🔹 013. Par ou Ímpar
     ➤ Peça um número ao usuário e diga se ele é par ou ímpar.

🔹 ?. Tabuada de um número
     ➤ O usuário digita um número e o programa exibe sua tabuada de 1 a 10.

🔹 ?. Verificar Anagramas
     Escreva um método que receba duas strings e retorne true se forem anagramas (mesmas letras em ordem diferente).
     👉 Ex: "amor" e "roma".

🔹 ?. Contar Palavras em uma Frase
     Peça para o usuário digitar uma frase e conte quantas palavras existem.
     👉 Desafio extra: ignore múltiplos espaços.

🔹 ?. Primeiro Caractere Repetido
     Dada uma string, encontre o primeiro caractere que se repete.
     👉 Ex: "programar" → 'r'

🔹 ?. Verificar se todos os caracteres são únicos
     Dada uma string, diga se todos os caracteres são únicos (sem repetição).
     👉 Ex: "abcd" → true
     👉 Ex: "java" → false

🔹 ?. Caixa Eletrônico Simples (POO)
     Simule um caixa eletrônico:
     Criar uma classe Conta com saldo, depositar, sacar.
     Usuário interage via console.

🔹 ?. Validador de Senha
    Verifique se uma senha é forte:
    Pelo menos 8 caracteres
    Contém letra maiúscula
    Contém número
    Contém caractere especial

🔹 ?. Remover elementos repetidos mantendo a ordem
     Dado um array de inteiros, remova os duplicados, mas mantenha a ordem original.
     👉 Use LinkedHashSet.

🔹 ?. Somar apenas números positivos de uma lista
     Peça ao usuário para digitar vários números e some apenas os positivos.

🔹 ?. Ordenar um array de inteiros (sem usar sort)

🔹 ?. Transformar String em Título
     Ex: "ola mundo em java" → "Ola Mundo Em Java"
     👉 Capitalizar a primeira letra de cada palavra.

🔹 ?. Criar uma classe Pessoa com atributos e método apresentar()

🔹 ?. Simular um cadastro simples com ArrayList

🔹 ?. Jogo da Adivinhação
     O computador escolhe um número aleatório de 1 a 10 e o usuário tenta adivinhar, recebendo dicas (maior/menor).